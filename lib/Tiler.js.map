{"version":3,"sources":["../src/Tiler.jsx"],"names":["Tiler","images","PropTypes","arrayOf","string","minWidth","number","maxWidth","Infinity","props","state","containerStyle","margin","padding","endTile","clear","float","display","ref","r","node","parentWidth","clientWidth","window","innerWidth","items","map","n","i","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,K;;;;;wBACI;AACrB,aAAO;AACLC,gBAAQ,gBAAMC,SAAN,CAAgBC,OAAhB,CAAwB,gBAAMD,SAAN,CAAgBE,MAAxC,CADH;AAELC,kBAAU,gBAAMH,SAAN,CAAgBI,MAFrB;AAGLC,kBAAU,gBAAML,SAAN,CAAgBI;AAHrB,OAAP;AAKD;;;wBAEyB;AACxB,aAAO;AACLL,gBAAQ,EADH;AAELI,kBAAU,GAFL;AAGLE,kBAAUC;AAHL,OAAP;AAKD;;;AAED,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXT,cAAQQ,MAAMR;AADH,KAAb;AAHiB;AAMlB;;;;6BAEQ;AAAA;;AACP,UAAMU,iBAAiB;AACrBC,gBAAQ,CADa;AAErBC,iBAAS;AAFY,OAAvB;;AAKA,UAAMC,UAAU;AACdC,eAAO,MADO;AAEdC,eAAO,MAFO;AAGdC,iBAAS;AAHK,OAAhB;;AAMA,UAAMC,MAAM,SAANA,GAAM,CAACC,CAAD,EAAO;AACjB,eAAKC,IAAL,GAAYD,CAAZ;AACD,OAFD;;AAIA,UAAME,cAAc,SAAdA,WAAc;AAAA,eAClB,OAAKD,IAAL,GAAY,OAAKA,IAAL,CAAUE,WAAtB,GAAoCC,OAAOC,UADzB;AAAA,OAApB;;AAIA,UAAMC,QAAQ,KAAKhB,KAAL,CAAWR,MAAX,CAAkByB,GAAlB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAChC;AACI,2BAAiBD,CADrB;AAEI,uBAAaN,WAFjB;AAGI,oBAAU,OAAKZ,KAAL,CAAWF,QAHzB;AAII,oBAAU,OAAKE,KAAL,CAAWJ,QAJzB;AAKI,eAAKuB,CALT,CAKY;AALZ,UADgC;AAAA,OAAtB,CAAd;;AAUA,aAAO;AAAA;AAAA,UAAK,KAAKV,GAAV,EAAe,OAAOP,cAAtB;AAAuCc,aAAvC;AAA6C,+CAAK,OAAOX,OAAZ;AAA7C,OAAP;AACD;;;;EAxDgC,gBAAMe,S;;kBAApB7B,K","file":"Tiler.js","sourcesContent":["import React from 'react'\nimport SquareImage from './SquareImage'\n\nexport default class Tiler extends React.Component {\n  static get propTypes() {\n    return {\n      images: React.PropTypes.arrayOf(React.PropTypes.string),\n      minWidth: React.PropTypes.number,\n      maxWidth: React.PropTypes.number,\n    }\n  }\n\n  static get defaultProps() {\n    return {\n      images: [],\n      minWidth: 500,\n      maxWidth: Infinity,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      images: props.images,\n    }\n  }\n\n  render() {\n    const containerStyle = {\n      margin: 0,\n      padding: 0,\n    }\n\n    const endTile = {\n      clear: 'both',\n      float: 'none',\n      display: 'block',\n    }\n\n    const ref = (r) => {\n      this.node = r\n    }\n\n    const parentWidth = () => (\n      this.node ? this.node.clientWidth : window.innerWidth\n    )\n\n    const items = this.props.images.map((n, i) =>\n        <SquareImage\n            backgroundImage={n}\n            parentWidth={parentWidth}\n            maxWidth={this.props.maxWidth}\n            minWidth={this.props.minWidth}\n            key={i} // eslint-disable-line react/no-array-index-key\n        />\n    )\n\n    return <div ref={ref} style={containerStyle}>{items}<div style={endTile} /></div>\n  }\n\n}\n"]}